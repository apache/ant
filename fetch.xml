<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       https://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="upload" default="fetch" xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
This build file downloads JAR files that optional Ant tasks use,
and installs them in a location that is accessible the next time Ant runs.

You can choose three locations, by going -Ddest=LOCATION on the command line
-Ddest=user     user lib dir  ${user.home}/.ant/lib
-Ddest=system   ant lib dir   ${ant.home}/lib
-Ddest=optional optional dir  $${basedir}/lib/optional  (for Ant developers)

You may also need to set proxy settings. On Java 1.5, Ant tries to get
this from the OS, unless you use the -noproxy option.

Proxies can be configured manually setting the JVM proxy values in the
ANT_OPTS environment variable.

For example, to set the proxy up in the tcsh shell, the command would
be something like:

For csh/tcsh:
setenv ANT_OPTS "-Dhttp.proxyHost=proxy -Dhttp.proxyPort=8080"
For bash:
export ANT_OPTS="-Dhttp.proxyHost=proxy -Dhttp.proxyPort=8080"
For Windows, set the environment variable in the appropriate dialog box
and open a new console or, by hand
set ANT_OPTS = -Dhttp.proxyHost=proxy -Dhttp.proxyPort=8080
  </description>

  <!-- Give user a chance to override without editing this file
       (and without typing -D each time it compiles it) -->
  <property file="${user.home}/.ant/ant.properties"/>
  <property name="lib.dir" location="lib"/>
  <property name="optional.dir" location="${lib.dir}/optional"/>
  <property name="userlib.dir" location="${user.home}/.ant/lib"/>

  <!-- Ivy -->
  <property name="ivy.version" value="2.5.0"/>
  <property name="ivy.dir" value="${user.home}/.ivy2/cache/org.apache.ivy/jars"/>
  <property name="ivy.jar.name" value="ivy-${ivy.version}.jar"/>
  <property name="ivy.jar.name" value="ivy-${ivy.version}.jar"/>
  <available property="has.ivy" file="${ivy.dir}/${ivy.jar.name}" type="file"/>

  <target name="pick-dest" unless="dest.dir">
    <fail>
      <condition>
        <not>
          <isset property="dest"/>
        </not>
      </condition>ERROR
Set -Ddest=LOCATION on the command line
  -Ddest=user     user lib dir  ${user.home}/.ant/lib
  -Ddest=system   ant lib dir   ${ant.home}/lib
  -Ddest=optional optional dir  $${basedir}/lib/optional  (for Ant developers)
    </fail>

    <condition property="dest.dir" value="${lib.dir}">
      <equals arg1="${dest}" arg2="system"/>
    </condition>
    <condition property="dest.dir" value="${optional.dir}">
      <equals arg1="${dest}" arg2="optional"/>
    </condition>
    <condition property="dest.dir" value="${userlib.dir}">
      <equals arg1="${dest}" arg2="user"/>
    </condition>
    <fail unless="dest.dir">Unknown destination : ${dest}</fail>
  </target>

  <target name="get-ivy" depends="pick-dest" unless="has.ivy">
    <mkdir dir="${ivy.dir}"/>
    <get usetimestamp="true" src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/${ivy.jar.name}"
         skipexisting="true"
         dest="${ivy.dir}/${ivy.jar.name}"/>
  </target>

  <target name="init-ivy" depends="get-ivy">
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.dir}/${ivy.jar.name}"/>
    <ivy:configure file="${basedir}/ivysettings.xml" override="true"/>
  </target>

  <target name="fetch" depends="init-ivy">
    <condition property="configurations" value="*" else="${ant.project.invoked-targets}">
      <equals arg1="${ant.project.invoked-targets}" arg2="fetch" trim="true"/>
    </condition>
    <ivy:resolve file="ivy.xml"/>
    <echo>Downloading to ${dest.dir}</echo>
    <ivy:retrieve pattern="${dest.dir}/[artifact]-[revision].[ext]" conf="${configurations}"/>
  </target>

  <target name="antlr" depends="fetch" description="load ANother Tool for Language Recognition (ANTLR)"/>
  <target name="antunit" depends="fetch" description="load AntUnit library"/>
  <target name="bcel" depends="fetch" description="load Byte Code Engineering Library (BCEL)"/>
  <target name="debugging" depends="fetch" description="internal Ant debugging"/>
  <target name="ivy" depends="fetch" description="load Ivy dependency manager"/>
  <target name="imageio" depends="fetch" description="load additional ImageIO readers"/>
  <target name="jai" depends="fetch" description="load Java Advanced Imaging"/>
  <target name="javamail" depends="fetch" description="load Jakarta Mail"/>
  <target name="jdepend" depends="fetch" description="load JDepend libraries"/>
  <target name="jspc" depends="fetch" description="load Jasper from Tomcat 4"/>
  <target name="junit" depends="fetch" description="load JUnit 3 and 4 libraries"/>
  <target name="logging" depends="fetch" description="load logging libraries (Commons and Log4j)"/>
  <target name="netrexx" depends="fetch" description="load NetRexx compiler"/>
  <target name="networking" depends="fetch" description="load networking libraries (Commons Net and JSch)"/>
  <target name="regexp" depends="fetch" description="load regexp libraries"/>
  <target name="graal.js" depends="fetch" description="load Graal.js libraries"/>
  <target name="script" depends="fetch" description="load script languages"/>
  <target name="groovy" depends="fetch" description="load Groovy"/>
  <target name="jruby" depends="fetch" description="load JRuby"/>
  <target name="jython" depends="fetch" description="load Jython"/>
  <target name="rhino" depends="fetch" description="load Rhino"/>
  <target name="xml" depends="fetch" description="load XML libraries (Xalan and XML Resolver)"/>
  <target name="xz" depends="fetch" description="load XZ for Java"/>
  <target name="junit-engine-jupiter" depends="fetch" description="load JUnit 5 libraries"/>
  <target name="junit-engine-vintage" depends="fetch" description="load JUnit 5 libraries for JUnit 4 tests"/>
</project>

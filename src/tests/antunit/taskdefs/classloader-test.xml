<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<project name="classloader-test" default="antunit" xmlns:au="antlib:org.apache.ant.antunit">
  <import file="../antunit-base.xml" />

  <target name="setUp">
    <mkdir dir="${input}" />
    <macrodef name="antCore">
      <!--
          Execute ant similar to how the launcher script does it,
          but make sure to only include the core ant.jar in the library list.
          That way we can see whether loading extra modules works as expected.
      -->
      <attribute name="target" />
      <sequential>
        <java classname="org.apache.tools.ant.launch.Launcher"
              outputproperty="test.output"
              fork="true"
              failonerror="false">
          <classpath>
            <pathelement location="${ant.library.dir}/ant-launcher.jar" />
          </classpath>
          <sysproperty key="ant.home" value="${ant.home}" />
          <sysproperty key="ant.library.dir" value="${input}" />
          <arg value="-lib" />
          <arg value="${ant.library.dir}/ant.jar" />
          <arg value="-cp" />
          <arg value="" />
          <arg value="-f" />
          <arg value="${ant.file}" />
          <arg value="-Dorig.library.dir=${ant.library.dir}" />
          <arg value="@{target}" />
        </java>
      </sequential>
    </macrodef>
  </target>

  <available file="${ant.library.dir}/ant-junit.jar"
             property="test.have.junit" />
  
  <target name="testCannotLoadTask" if="test.have.junit">
    <!-- Make sure we DON'T have <junit> available by default -->
    <antCore target="runCannotLoadTask" />
    <au:assertTrue message="Expected line not found:&#10;${test.output}">
      <contains string="${test.output}"
                substring="JUnitTask was not found" />
    </au:assertTrue>
  </target>

  <target name="runCannotLoadTask">
    <junit/>
  </target>
  
  <target name="testTweakCoreLoader" if="test.have.junit">
    <!-- <junit> becomes available if we tweak the core class loader -->
    <antCore target="runTweakCoreLoader" />
    <au:assertTrue message="Expected line not found:&#10;${test.output}">
      <!-- This error message is generated by the <junit> task,
           so that task itself must have been loaded successfully -->
      <contains string="${test.output}"
                substring="must include junit.jar" />
    </au:assertTrue>
  </target>

  <target name="runTweakCoreLoader">
    <echo message="${orig.library.dir}/ant-junit.jar"/>
    <classloader classpath="${orig.library.dir}/ant-junit.jar"/>
    <junit/>
  </target>

</project>
